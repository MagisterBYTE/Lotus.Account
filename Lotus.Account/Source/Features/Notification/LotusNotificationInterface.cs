//=====================================================================================================================
// Проект: Модуль учетной записи пользователя
// Раздел: Подсистема работы с уведомлениями
// Автор: MagistrBYTE aka DanielDem <dementevds@gmail.com>
//---------------------------------------------------------------------------------------------------------------------
/** \file LotusNotificationInterface.cs
*		Определение интерфейса сервиса для работы с уведомлениями.
*/
//---------------------------------------------------------------------------------------------------------------------
// Версия: 1.0.0.0
// Последнее изменение от 30.04.2023
//=====================================================================================================================
using Lotus.Repository;
//=====================================================================================================================
namespace Lotus
{
    namespace Account
    {
        //-------------------------------------------------------------------------------------------------------------
        /**
         * \defnotification AccountNotification Подсистема работы с уведомлениями
         * \innotification Account
         * \brief Подсистема работы с уведомлениями.
         * @{
         */
        //-------------------------------------------------------------------------------------------------------------
        /// <summary>
        /// Интерфейс сервиса для работы с уведомлениями
        /// </summary>
        //-------------------------------------------------------------------------------------------------------------
        public interface ILotusNotificationService
        {
            //---------------------------------------------------------------------------------------------------------
            /// <summary>
            /// Создание уведомления по указанным данным
            /// </summary>
            /// <param name="notificationCreate">Параметры для создания уведомления</param>
            /// <param name="token">Токен отмены</param>
            /// <returns>Уведомление</returns>
            //---------------------------------------------------------------------------------------------------------
            Task<Response<CNotificationDto>> CreateAsync(CNotificationCreateDto notificationCreate, CancellationToken token);

            //---------------------------------------------------------------------------------------------------------
            /// <summary>
            /// Обновление данных указанного уведомления
            /// </summary>
            /// <param name="notificationUpdate">Параметры обновляемого уведомления</param>
            /// <param name="token">Токен отмены</param>
            /// <returns>Уведомление</returns>
            //---------------------------------------------------------------------------------------------------------
            Task<Response<CNotificationDto>> UpdateAsync(CNotificationDto notificationUpdate, CancellationToken token);

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Получение указанного уведомления
			/// </summary>
			/// <param name="id">Идентификатор уведомления</param>
			/// <param name="token">Токен отмены</param>
			/// <returns>Уведомление</returns>
			//---------------------------------------------------------------------------------------------------------
			Task<Response<CNotificationDto>> GetAsync(Guid id, CancellationToken token);

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Получение списка уведомлений
			/// </summary>
			/// <param name="notificationRequest">Параметры получения списка</param>
			/// <param name="token">Токен отмены</param>
			/// <returns>Cписок уведомлений</returns>
			//---------------------------------------------------------------------------------------------------------
			Task<ResponsePage<CNotificationDto>> GetAllAsync(CNotificationsDto notificationRequest, CancellationToken token);

            //---------------------------------------------------------------------------------------------------------
            /// <summary>
            /// Удаление уведомления
            /// </summary>
            /// <param name="id">Идентификатор уведомления</param>
            /// <param name="token">Токен отмены</param>
            /// <returns>Статус успешности</returns>
            //---------------------------------------------------------------------------------------------------------
            Task<Response> DeleteAsync(Guid id, CancellationToken token);
        }
        //-------------------------------------------------------------------------------------------------------------
        /**@}*/
        //-------------------------------------------------------------------------------------------------------------
    }
}
//=====================================================================================================================