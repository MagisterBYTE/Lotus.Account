//=====================================================================================================================
// Проект: Модуль учетной записи пользователя
// Раздел: Подсистема работы с ролями
// Автор: MagistrBYTE aka DanielDem <dementevds@gmail.com>
//---------------------------------------------------------------------------------------------------------------------
/** \file LotusUserRoleInterface.cs
*		Определение интерфейса сервиса для работы с ролями.
*/
//---------------------------------------------------------------------------------------------------------------------
// Версия: 1.0.0.0
// Последнее изменение от 30.04.2023
//=====================================================================================================================
using Lotus.Core;
using Lotus.Repository;
//=====================================================================================================================
namespace Lotus
{
    namespace Account
    {
		//-------------------------------------------------------------------------------------------------------------
		/** \addtogroup AccountRole
		*@{*/
		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Интерфейс сервиса для работы с ролями
		/// </summary>
		//-------------------------------------------------------------------------------------------------------------
		public interface ILotusUserRoleService
        {
            //---------------------------------------------------------------------------------------------------------
            /// <summary>
            /// Создание роли по указанным данным
            /// </summary>
            /// <param name="roleCreate">Параметры для создания роли</param>
            /// <param name="token">Токен отмены</param>
            /// <returns>Роль</returns>
            //---------------------------------------------------------------------------------------------------------
            Task<Response<UserRoleDto>> CreateAsync(UserRoleCreateRequest roleCreate, CancellationToken token);

            //---------------------------------------------------------------------------------------------------------
            /// <summary>
            /// Обновление данных указанной роли
            /// </summary>
            /// <param name="roleUpdate">Параметры обновляемой роли</param>
            /// <param name="token">Токен отмены</param>
            /// <returns>Роль</returns>
            //---------------------------------------------------------------------------------------------------------
            Task<Response<UserRoleDto>> UpdateAsync(UserRoleDto roleUpdate, CancellationToken token);

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Получение указанной роли
			/// </summary>
			/// <param name="id">Идентификатор роли</param>
			/// <param name="token">Токен отмены</param>
			/// <returns>Роль</returns>
			//---------------------------------------------------------------------------------------------------------
			Task<Response<UserRoleDto>> GetAsync(Int32 id, CancellationToken token);

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Получение списка ролей
			/// </summary>
			/// <param name="roleRequest">Параметры получения списка</param>
			/// <param name="token">Токен отмены</param>
			/// <returns>Cписок ролей</returns>
			//---------------------------------------------------------------------------------------------------------
			Task<ResponsePage<UserRoleDto>> GetAllAsync(UserRolesRequest roleRequest, CancellationToken token);

            //---------------------------------------------------------------------------------------------------------
            /// <summary>
            /// Удаление роли
            /// </summary>
            /// <param name="id">Идентификатор роли</param>
            /// <param name="token">Токен отмены</param>
            /// <returns>Статус успешности</returns>
            //---------------------------------------------------------------------------------------------------------
            Task<Response> DeleteAsync(Int32 id, CancellationToken token);
        }
        //-------------------------------------------------------------------------------------------------------------
        /**@}*/
        //-------------------------------------------------------------------------------------------------------------
    }
}
//=====================================================================================================================