//=====================================================================================================================
// Проект: Модуль учетной записи пользователя
// Раздел: Подсистема работы с сообщениями
// Автор: MagistrBYTE aka DanielDem <dementevds@gmail.com>
//---------------------------------------------------------------------------------------------------------------------
/** \file LotusUserMessage.cs
*		Класс для определения сообщения пользователя.
*/
//---------------------------------------------------------------------------------------------------------------------
// Версия: 1.0.0.0
// Последнее изменение от 30.04.2023
//=====================================================================================================================
using System;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;
//---------------------------------------------------------------------------------------------------------------------
using Lotus.Core;
//=====================================================================================================================
namespace Lotus
{
    namespace Account
    {
		//-------------------------------------------------------------------------------------------------------------
		/**
         * \defgroup AccountMessage Подсистема работы с сообщениями
         * \ingroup Account
         * \brief Подсистема работы с сообщениями.
         * @{
         */
		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Класс для определения сообщения пользователя
		/// </summary>
		//-------------------------------------------------------------------------------------------------------------
		public class UserMessage : EntityDb<Guid>
        {
            #region ======================================= КОНСТАНТНЫЕ ДАННЫЕ ========================================
            /// <summary>
            /// Имя таблицы
            /// </summary>
            public const String TABLE_NAME = "UserMessage";
            #endregion

            #region ======================================= МЕТОДЫ ОПРЕДЕЛЕНИЯ МОДЕЛЕЙ ================================
            //---------------------------------------------------------------------------------------------------------
            /// <summary>
            /// Конфигурирование модели для типа <see cref="UserMessage"/>
            /// </summary>
            /// <param name="modelBuilder">Интерфейс для построения моделей</param>
            //---------------------------------------------------------------------------------------------------------
            public static void ModelCreating(ModelBuilder modelBuilder)
            {
                // Определение для таблицы
                var model = modelBuilder.Entity<UserMessage>();
                model.ToTable(TABLE_NAME, XDbConstants.SchemeName);
            }
            #endregion

            #region ======================================= СВОЙСТВА ==================================================
            /// <summary>
            /// Текст сообщения
            /// </summary>
            public String Text { get; set; } = null!;

            /// <summary>
            /// Время отправки сообщения
            /// </summary>
            public DateTime Time { get; set; }

            /// <summary>
            /// Статус прочитания сообщения
            /// </summary>
            public Boolean IsRead { get; set; }

            //
            // АВТОР
            //
            /// <summary>
            /// Автор сообщения
            /// </summary>
            [ForeignKey(nameof(AuthorId))]
            public User? Author { get; set; }

            /// <summary>
            /// Идентификатор автора сообщения
            /// </summary>
            public Guid? AuthorId { get; set; }

            //
            // ПОЛУЧАТЕЛЬ
            //
            /// <summary>
            /// Получатель сообщения
            /// </summary>
            [ForeignKey(nameof(ReceiverId))]
            public User? Receiver { get; set; }

            /// <summary>
            /// Идентификатор получателя сообщения
            /// </summary>
            public Guid? ReceiverId { get; set; }
            #endregion
        }
        //-------------------------------------------------------------------------------------------------------------
        /**@}*/
        //-------------------------------------------------------------------------------------------------------------
    }
}
//=====================================================================================================================