//=====================================================================================================================
// Проект: Модуль учетной записи пользователя
// Раздел: Подсистема авторизации
// Автор: MagistrBYTE aka DanielDem <dementevds@gmail.com>
//---------------------------------------------------------------------------------------------------------------------
/** \file LotusAuthorizeInterface.cs
*		Определение интерфейса сервиса для авторизации пользователя.
*/
//---------------------------------------------------------------------------------------------------------------------
// Версия: 1.0.0.0
// Последнее изменение от 30.04.2023
//=====================================================================================================================
using System.Security.Claims;
//---------------------------------------------------------------------------------------------------------------------
using Lotus.Core;
using Lotus.Repository;
//=====================================================================================================================
namespace Lotus
{
    namespace Account
    {
        //-------------------------------------------------------------------------------------------------------------
        /**
         * \defgroup AccountAuthorize Подсистема авторизации
         * \ingroup Account
         * \brief Подсистема авторизации.
         * @{
         */
        //-------------------------------------------------------------------------------------------------------------
        /// <summary>
        /// Интерфейса сервиса для авторизации пользователя
        /// </summary>
        //-------------------------------------------------------------------------------------------------------------
        public interface ILotusAuthorizeService
        {
            //---------------------------------------------------------------------------------------------------------
            /// <summary>
            /// Аутентификация пользователя
            /// </summary>
            /// <param name="loginParameters">Параметры для аутентификации пользователя</param>
            /// <returns>Набор утверждений</returns>
            //---------------------------------------------------------------------------------------------------------
            Task<Response<ClaimsPrincipal>> LoginAsync(LoginParametersDto loginParameters);

            //---------------------------------------------------------------------------------------------------------
            /// <summary>
            /// Выход из статуса аутентификации пользователя
            /// </summary>
            /// <returns>Задача</returns>
            //---------------------------------------------------------------------------------------------------------
            Task LogoutAsync();

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Регистрация нового пользователя
			/// </summary>
			/// <param name="registerParameters">Параметры для регистрации нового пользователя</param>
			/// <param name="token">Токен отмены</param>
			/// <returns>Пользователь</returns>
			//---------------------------------------------------------------------------------------------------------
			Task<Response> RegisterAsync(RegisterParametersDto registerParameters, CancellationToken token);
		}
        //-------------------------------------------------------------------------------------------------------------
        /**@}*/
        //-------------------------------------------------------------------------------------------------------------
    }
}
//=====================================================================================================================