//=====================================================================================================================
// Проект: Модуль учетной записи пользователя
// Раздел: Подсистема работы с группами
// Автор: MagistrBYTE aka DanielDem <dementevds@gmail.com>
//---------------------------------------------------------------------------------------------------------------------
/** \file LotusGroupInterface.cs
*		Определение интерфейса сервиса для работы с группами.
*/
//---------------------------------------------------------------------------------------------------------------------
// Версия: 1.0.0.0
// Последнее изменение от 30.04.2023
//=====================================================================================================================
using Lotus.Repository;
//=====================================================================================================================
namespace Lotus
{
    namespace Account
    {
        //-------------------------------------------------------------------------------------------------------------
        /**
         * \defgroup AccountGroup Подсистема работы с группами
         * \ingroup Account
         * \brief Подсистема работы с группами.
         * @{
         */
        //-------------------------------------------------------------------------------------------------------------
        /// <summary>
        /// Интерфейс сервиса для работы с группами
        /// </summary>
        //-------------------------------------------------------------------------------------------------------------
        public interface ILotusGroupService
        {
            //---------------------------------------------------------------------------------------------------------
            /// <summary>
            /// Создание группы по указанным данным
            /// </summary>
            /// <param name="groupCreate">Параметры для создания группы</param>
            /// <param name="token">Токен отмены</param>
            /// <returns>Группа</returns>
            //---------------------------------------------------------------------------------------------------------
            Task<Response<CGroupDto>> CreateAsync(CGroupCreateDto groupCreate, CancellationToken token);

            //---------------------------------------------------------------------------------------------------------
            /// <summary>
            /// Обновление данных указанной группы
            /// </summary>
            /// <param name="groupUpdate">Параметры обновляемого группы</param>
            /// <param name="token">Токен отмены</param>
            /// <returns>Группа</returns>
            //---------------------------------------------------------------------------------------------------------
            Task<Response<CGroupDto>> UpdateAsync(CGroupDto groupUpdate, CancellationToken token);

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Получение указанной группы
			/// </summary>
			/// <param name="id">Идентификатор группы</param>
			/// <param name="token">Токен отмены</param>
			/// <returns>Группа</returns>
			//---------------------------------------------------------------------------------------------------------
			Task<Response<CGroupDto>> GetAsync(Int32 id, CancellationToken token);

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Получение списка групп
			/// </summary>
			/// <param name="groupRequest">Параметры получения списка</param>
			/// <param name="token">Токен отмены</param>
			/// <returns>Cписок групп</returns>
			//---------------------------------------------------------------------------------------------------------
			Task<ResponsePage<CGroupDto>> GetAllAsync(CGroupsDto groupRequest, CancellationToken token);

            //---------------------------------------------------------------------------------------------------------
            /// <summary>
            /// Удаление группы
            /// </summary>
            /// <param name="id">Идентификатор группы</param>
            /// <param name="token">Токен отмены</param>
            /// <returns>Статус успешности</returns>
            //---------------------------------------------------------------------------------------------------------
            Task<Response> DeleteAsync(Int32 id, CancellationToken token);
        }
        //-------------------------------------------------------------------------------------------------------------
        /**@}*/
        //-------------------------------------------------------------------------------------------------------------
    }
}
//=====================================================================================================================