//=====================================================================================================================
// Проект: Модуль учетной записи пользователя
// Раздел: Подсистема работы с разрешениями
// Автор: MagistrBYTE aka DanielDem <dementevds@gmail.com>
//---------------------------------------------------------------------------------------------------------------------
/** \file LotusPermissionInterface.cs
*		Определение интерфейса сервиса для работы с разрешениями.
*/
//---------------------------------------------------------------------------------------------------------------------
// Версия: 1.0.0.0
// Последнее изменение от 30.04.2023
//=====================================================================================================================
using Lotus.Repository;
//=====================================================================================================================
namespace Lotus
{
    namespace Account
    {
        //-------------------------------------------------------------------------------------------------------------
        /**
         * \defgroup AccountPermission Подсистема работы с разрешениями
         * \ingroup Account
         * \brief Подсистема работы с разрешениями.
         * @{
         */
        //-------------------------------------------------------------------------------------------------------------
        /// <summary>
        /// Интерфейс сервиса для работы с разрешениями
        /// </summary>
        //-------------------------------------------------------------------------------------------------------------
        public interface ILotusPermissionService
        {
            //---------------------------------------------------------------------------------------------------------
            /// <summary>
            /// Создание разрешения по указанным данным
            /// </summary>
            /// <param name="permissionCreate">Параметры для создания разрешения</param>
            /// <param name="token">Токен отмены</param>
            /// <returns>Должность</returns>
            //---------------------------------------------------------------------------------------------------------
            Task<Response<CPermissionDto>> CreateAsync(CPermissionCreateDto permissionCreate, CancellationToken token);

            //---------------------------------------------------------------------------------------------------------
            /// <summary>
            /// Обновление данных указанной разрешения
            /// </summary>
            /// <param name="permissionUpdate">Параметры обновляемого разрешения</param>
            /// <param name="token">Токен отмены</param>
            /// <returns>Должность</returns>
            //---------------------------------------------------------------------------------------------------------
            Task<Response<CPermissionDto>> UpdateAsync(CPermissionDto permissionUpdate, CancellationToken token);

            //---------------------------------------------------------------------------------------------------------
            /// <summary>
            /// Получение списка разрешений
            /// </summary>
            /// <param name="permissionRequest">Параметры получения списка</param>
            /// <param name="token">Токен отмены</param>
            /// <returns>Cписок разрешений</returns>
            //---------------------------------------------------------------------------------------------------------
            Task<ResponsePage<CPermissionDto>> GetAllAsync(CPermissionsDto permissionRequest, CancellationToken token);

            //---------------------------------------------------------------------------------------------------------
            /// <summary>
            /// Удаление разрешения
            /// </summary>
            /// <param name="id">Идентификатор разрешения</param>
            /// <param name="token">Токен отмены</param>
            /// <returns>Статус успешности</returns>
            //---------------------------------------------------------------------------------------------------------
            Task<Response> DeleteAsync(Int32 id, CancellationToken token);
        }
        //-------------------------------------------------------------------------------------------------------------
        /**@}*/
        //-------------------------------------------------------------------------------------------------------------
    }
}
//=====================================================================================================================